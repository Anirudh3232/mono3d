<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="78ce1613-bc59-4a06-a174-fb6a8853587d" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.idea/Mono3d-Backend.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/profiles_settings.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/TripoSR-main/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/TripoSR-main/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/TripoSR-main/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/TripoSR-main/examples/captured.jpeg" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/TripoSR-main/examples/captured_p.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/TripoSR-main/examples/chair.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/TripoSR-main/examples/flamingo.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/TripoSR-main/examples/hamburger.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/TripoSR-main/examples/horse.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/TripoSR-main/examples/iso_house.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/TripoSR-main/examples/marble.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/TripoSR-main/examples/police_woman.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/TripoSR-main/examples/poly_fox.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/TripoSR-main/examples/robot.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/TripoSR-main/examples/stripes.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/TripoSR-main/examples/teapot.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/TripoSR-main/examples/tiger_girl.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/TripoSR-main/examples/unicorn.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/TripoSR-main/figures/comparison800.gif" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/TripoSR-main/figures/scatter-comparison.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/TripoSR-main/figures/teaser800.gif" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/TripoSR-main/figures/visual_comparisons.jpg" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/TripoSR-main/gradio_app.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/TripoSR-main/requirements.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/TripoSR-main/run.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/TripoSR-main/tsr/models/isosurface.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/TripoSR-main/tsr/models/nerf_renderer.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/TripoSR-main/tsr/models/network_utils.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/TripoSR-main/tsr/models/tokenizers/image.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/TripoSR-main/tsr/models/tokenizers/triplane.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/TripoSR-main/tsr/models/transformer/attention.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/TripoSR-main/tsr/models/transformer/basic_transformer_block.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/TripoSR-main/tsr/models/transformer/transformer_1d.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/TripoSR-main/tsr/system.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/TripoSR-main/tsr/utils.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/service.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../mono3d-frontend/src/app/api/generate/route.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../mono3d-frontend/src/components/DropZone.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../mono3d-frontend/src/components/ModelPreview.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mono3d-frontend/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/../mono3d-frontend/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mono3d-frontend/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/../mono3d-frontend/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../mono3d-frontend/src/app/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/../mono3d-frontend/src/app/page.tsx" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FlaskConsoleOptions" custom-start-script="import sys; print('Python %s on %s' % (sys.version, sys.platform)); sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo, NoAppException&#10;for module in [&quot;main.py&quot;, &quot;wsgi.py&quot;, &quot;app.py&quot;]:&#10;    try: locals().update(ScriptInfo(app_import_path=module, create_app=None).load_app().make_shell_context()); print(&quot;\nFlask App: %s&quot; % app.import_name); break&#10;    except NoAppException: pass">
    <envs>
      <env key="FLASK_APP" value="app" />
    </envs>
    <option name="myCustomStartScript" value="import sys; print('Python %s on %s' % (sys.version, sys.platform)); sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo, NoAppException&#10;for module in [&quot;main.py&quot;, &quot;wsgi.py&quot;, &quot;app.py&quot;]:&#10;    try: locals().update(ScriptInfo(app_import_path=module, create_app=None).load_app().make_shell_context()); print(&quot;\nFlask App: %s&quot; % app.import_name); break&#10;    except NoAppException: pass" />
    <option name="myEnvs">
      <map>
        <entry key="FLASK_APP" value="app" />
      </map>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 5
}</component>
  <component name="ProjectId" id="2yFn6fgSNwzlNtwlF1VGDjB3DnA" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ModuleVcsDetector.initialDetectionPerformed": "true",
    "Python.service.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "git-widget-placeholder": "master",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "preferences.pluginManager",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager">
    <configuration name="service" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="Mono3d-Backend" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/service.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python.service" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-6a121458b545-JavaScript-PY-251.25410.159" />
        <option value="bundled-python-sdk-e0ed3721d81e-36ea0e71a18c-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-251.25410.159" />
      </set>
    </attachedChunks>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="78ce1613-bc59-4a06-a174-fb6a8853587d" name="Changes" comment="" />
      <created>1749439015074</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1749439015074</updated>
      <workItem from="1749439016121" duration="6000" />
      <workItem from="1749668998200" duration="1059000" />
      <workItem from="1749725691704" duration="23474000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/Mono3d_Backend$service.coverage" NAME="service Coverage Results" MODIFIED="1749737550297" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
  </component>
</project>